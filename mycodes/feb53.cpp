#include<stdio.h>
int main()
{
	static long long int seedha[11][1000008],ulta[11][1000008],l,r,i,j,n,res,whole,aapas,door;
	char ar[1000006],a,b;
	scanf("%s",ar);
	scanf("%lld",&n);
	for(i=0,j=1;ar[i]!='\0';i++)
	{
		if(ar[i]=='c')
		{
			seedha[1][j]=seedha[1][j-1]+1;
			seedha[2][j]=seedha[2][j-1]+0;
			seedha[3][j]=seedha[3][j-1]+0;
			seedha[4][j]=seedha[4][j-1]+0;
			seedha[5][0]=seedha[5][0]-seedha[2][j];
			seedha[5][j]=seedha[5][0];
			seedha[6][0]=seedha[6][0]-seedha[3][j];
			seedha[6][j]=seedha[6][0];
			seedha[7][0]=seedha[7][0]-seedha[4][j];
			seedha[7][j]=seedha[7][0];
			seedha[8][j]=seedha[8][0];
			seedha[9][j]=seedha[9][0];
			seedha[10][j]=seedha[10][0];
			
			ulta[1][j]=ulta[1][j-1]+0;
			ulta[2][j]=ulta[2][j-1]+0;
			ulta[3][j]=ulta[3][j-1]+0;
			ulta[4][j]=ulta[4][j-1]+1;
			ulta[5][j]=ulta[5][0];
			ulta[6][j]=ulta[6][0];
			ulta[7][j]=ulta[7][0];
			ulta[8][j]=ulta[8][0];
			ulta[9][j]=ulta[9][0];
			ulta[10][j]=ulta[10][0];	
			j++;
			
		}
		else if(ar[i]=='h')
		{
			seedha[1][j]=seedha[1][j-1]+0;
			seedha[2][j]=seedha[2][j-1]+1;
			seedha[3][j]=seedha[3][j-1]+0;
			seedha[4][j]=seedha[4][j-1]+0;
			seedha[5][j]=seedha[5][0];
			seedha[6][j]=seedha[6][0];
			seedha[7][j]=seedha[7][0];
			seedha[8][0]=seedha[8][0]-seedha[3][j];
			seedha[8][j]=seedha[8][0];
			seedha[9][0]=seedha[9][0]-seedha[4][j];
			seedha[9][j]=seedha[9][0];
			seedha[10][j]=seedha[10][0];
			//ulta
			ulta[1][j]=ulta[1][j-1]+0;
			ulta[2][j]=ulta[2][j-1]+0;
			ulta[3][j]=ulta[3][j-1]+1;
			ulta[4][j]=ulta[4][j-1]+0;
			ulta[5][j]=ulta[5][0];
			ulta[6][j]=ulta[6][0];
			ulta[7][j]=ulta[7][0];
			ulta[8][j]=ulta[8][0];
			ulta[9][j]=ulta[9][0];
			ulta[10][0]=ulta[10][0]-ulta[4][j];
			ulta[10][j]=ulta[10][0];	
			j++;
		}
		else if(ar[i]=='e')
		{
			seedha[1][j]=seedha[1][j-1]+0;
			seedha[2][j]=seedha[2][j-1]+0;
			seedha[3][j]=seedha[3][j-1]+1;
			seedha[4][j]=seedha[4][j-1]+0;
			seedha[5][j]=seedha[5][0];
			seedha[6][j]=seedha[6][0];
			seedha[7][j]=seedha[7][0];
			seedha[8][j]=seedha[8][0];
			seedha[9][j]=seedha[9][0];
			seedha[10][0]=seedha[10][0]-seedha[4][j];
			seedha[10][j]=seedha[10][0];
			//ulta
			ulta[1][j]=ulta[1][j-1]+0;
			ulta[2][j]=ulta[2][j-1]+1;
			ulta[3][j]=ulta[3][j-1]+0;
			ulta[4][j]=ulta[4][j-1]+0;
			ulta[5][j]=ulta[5][0];
			ulta[6][j]=ulta[6][0];
			ulta[7][j]=ulta[7][0];
			ulta[8][0]=ulta[8][0]-ulta[3][j];
			ulta[8][j]=ulta[8][0];
			ulta[9][0]=ulta[9][0]-ulta[4][j];
			ulta[9][j]=ulta[9][0];
			ulta[10][j]=ulta[10][0];		
			j++;
		}
		else if(ar[i]=='f')
		{
			seedha[1][j]=seedha[1][j-1]+0;
			seedha[2][j]=seedha[2][j-1]+0;
			seedha[3][j]=seedha[3][j-1]+0;
			seedha[4][j]=seedha[4][j-1]+1;
			seedha[5][j]=seedha[5][0];
			seedha[6][j]=seedha[6][0];
			seedha[7][j]=seedha[7][0];
			seedha[8][j]=seedha[8][0];
			seedha[9][j]=seedha[9][0];
			seedha[10][j]=seedha[10][0];
			//ulta
			ulta[1][j]=ulta[1][j-1]+1;
			ulta[2][j]=ulta[2][j-1]+0;
			ulta[3][j]=ulta[3][j-1]+0;
			ulta[4][j]=ulta[4][j-1]+0;
			ulta[5][0]=ulta[5][0]-ulta[2][j];
			ulta[5][j]=ulta[5][0];
			ulta[6][0]=ulta[6][0]-ulta[3][j];
			ulta[6][j]=ulta[6][0];
			ulta[7][0]=ulta[7][0]-ulta[4][j];
			ulta[7][j]=ulta[7][0];
			ulta[8][j]=ulta[8][0];
			ulta[9][j]=ulta[9][0];
			ulta[10][j]=ulta[10][0];			
			j++;
		}
	}
//	for(i=1;i<=10;i++)
//	{
//		for(j=1;j<=10;j++)
//		{
//			printf("%lld ",ulta[i][j]);
//		}printf("\n");
//	}

	while(n--)
	{
		scanf("\n%c\n%c\n%lld%lld",&a,&b,&l,&r);
			
		if(a=='c'&&b=='h')
		{
			if(l==1)
			{
				res=seedha[1][r]*seedha[2][r]+seedha[5][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[1][r]*seedha[2][r]+seedha[5][r];
				aapas=seedha[1][l-1]*seedha[2][l-1]+seedha[5][l-1];
				door=seedha[1][l-1]*(seedha[2][r]-seedha[2][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='c'&&b=='e')
		{
			if(l==1)
			{
				res=seedha[1][r]*seedha[3][r]+seedha[6][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[1][r]*seedha[3][r]+seedha[6][r];
				aapas=seedha[1][l-1]*seedha[3][l-1]+seedha[6][l-1];
				door=seedha[1][l-1]*(seedha[3][r]-seedha[3][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='c'&&b=='f')
		{
			if(l==1)
			{
				res=seedha[1][r]*seedha[4][r]+seedha[7][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[1][r]*seedha[4][r]+seedha[7][r];
				aapas=seedha[1][l-1]*seedha[4][l-1]+seedha[7][l-1];
				door=seedha[1][l-1]*(seedha[4][r]-seedha[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='h'&&b=='e')
		{
			if(l==1)
			{
				res=seedha[2][r]*seedha[3][r]+seedha[8][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[2][r]*seedha[3][r]+seedha[8][r];
				aapas=seedha[2][l-1]*seedha[3][l-1]+seedha[8][l-1];
				door=seedha[2][l-1]*(seedha[3][r]-seedha[3][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='h'&&b=='f')
		{
			if(l==1)
			{
				res=seedha[2][r]*seedha[4][r]+seedha[9][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[2][r]*seedha[4][r]+seedha[9][r];
				aapas=seedha[2][l-1]*seedha[4][l-1]+seedha[9][l-1];
				door=seedha[2][l-1]*(seedha[4][r]-seedha[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='e'&&b=='f')
		{
			if(l==1)
			{
				res=seedha[3][r]*seedha[4][r]+seedha[10][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=seedha[3][r]*seedha[4][r]+seedha[10][r];
				aapas=seedha[3][l-1]*seedha[4][l-1]+seedha[10][l-1];
				door=seedha[3][l-1]*(seedha[4][r]-seedha[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='f'&&b=='e')
		{
			if(l==1)
			{
				res=ulta[1][r]*ulta[2][r]+ulta[5][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[1][r]*ulta[2][r]+ulta[5][r];
				aapas=ulta[1][l-1]*ulta[2][l-1]+ulta[5][l-1];
				door=ulta[1][l-1]*(ulta[2][r]-ulta[2][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='f'&&b=='h')
		{
			if(l==1)
			{
				res=ulta[1][r]*ulta[3][r]+ulta[6][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[1][r]*ulta[3][r]+ulta[6][r];
				aapas=ulta[1][l-1]*ulta[3][l-1]+ulta[6][l-1];
				door=ulta[1][l-1]*(ulta[3][r]-ulta[3][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='f'&&b=='c')
		{
			if(l==1)
			{
				res=ulta[1][r]*ulta[4][r]+ulta[7][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[1][r]*ulta[4][r]+ulta[7][r];
				aapas=ulta[1][l-1]*ulta[4][l-1]+ulta[7][l-1];
				door=ulta[1][l-1]*(ulta[4][r]-ulta[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='e'&&b=='h')
		{
			if(l==1)
			{
				res=ulta[2][r]*ulta[3][r]+ulta[8][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[2][r]*ulta[3][r]+ulta[8][r];
				aapas=ulta[2][l-1]*ulta[3][l-1]+ulta[8][l-1];
				door=ulta[2][l-1]*(ulta[3][r]-ulta[3][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='e'&&b=='c')
		{
			if(l==1)
			{
				res=ulta[2][r]*ulta[4][r]+ulta[9][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[2][r]*ulta[4][r]+ulta[9][r];
				aapas=ulta[2][l-1]*ulta[4][l-1]+ulta[9][l-1];
				door=ulta[2][l-1]*(ulta[4][r]-ulta[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		else if(a=='h'&&b=='c')
		{
			if(l==1)
			{
				res=ulta[3][r]*ulta[4][r]+ulta[10][r];
				printf("%lld\n",res);
			}
			else
			{
				whole=ulta[3][r]*ulta[4][r]+ulta[10][r];
				aapas=ulta[3][l-1]*ulta[4][l-1]+ulta[10][l-1];
				door=ulta[3][l-1]*(ulta[4][r]-ulta[4][l-1]);
				res=whole-(aapas+door);
				printf("%lld\n",res);
			}
		}
		

		
	}
	return 0;
}
